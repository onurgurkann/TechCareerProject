#######################################################################
### System config #####################################################
# Port
server.port=8080

# White label
server.error.whitelabel.enabled=true


#######################################################################
### Log ###############################################################
# Log
logging.file.name=./log/blog.log

# Log LEVEL (7)
# OFF > FATAL > ERROR > WARN > INFO >DEBUG > TRACE
logging.level.root=INFO


#######################################################################
### Swagger ###########################################################
# swagger open api 3.0
# http://localhost:8080/swagger-ui.html
# http://localhost:8080/v3/api-docs/
# http://localhost:8080/api-docs/
springdoc.api-docs.path=/api-docs
# springdoc.swagger-ui.path=/swagger-ui-custom.html

#######################################################################
### JWT ###############################################################
#jwt.secret=secretOfUsDontBeShy
#jwt.expire.time=86400000
#jwt.token.prefix=Bearer
#jwt.header.string=Authorization
jwt.secret=onurgurkan
jwt.expire.time=2592000
jwt.cookie.name=onur


#######################################################################
### Thymeleaf #########################################################
spring.thymeleaf.enabled=true

# performans için template cache de tutulabilir. active - passive
#Spring.thymeleaf.cache=false



#######################################################################
### Actuator ##########################################################
# actuator:projemiz hakk?nda bize bilgi verir. false olursa actuator kapat?l?r
management.endpoints.enabled-by-default=true

# actuator her yerde eri?imine izin vermek. yani web eri?im
management.endpoints.web.exposure.include=*

# localhost:8080/actuator/health
management.endpoints.web.base-path=/actuator



#######################################################################
### Database  #########################################################
## H2Database
logging.level.org.springframework.jdbc.core = TRACE
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.show_sql = true

# önce create sonra durdur update yap
#jpa > none update create, create-drop, validate
spring.jpa.hibernate.ddl-auto = update


## Generic JNDI Data Source
##in Memory
##spring.datasource.url=jdbc:h2:mem:projectdb
## Directory on Disk
## spring.datasource.url=jdbc:h2:file:C:/data/projectdb
##Current User Directory
##spring.datasource.url=jdbc:h2:file:~/projectdb
##Current Working Directory
## http://localhost:8080/h2-console
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.url=jdbc:h2:file:./memory_persist/projectdb
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true

## Mysql
##CREATE SCHEMA `techcareer_springboot_1` DEFAULT CHARACTER SET utf8 COLLATE utf8_turkish_ci ;
##use techcareer_springboot_1
spring.datasource.url=jdbc:mysql://localhost:3306/techcareer_project?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=onur.123
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

## Postgresql
#spring.datasource.url=jdbc:postgresql://postgresqldb:5432/projectdb
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.show-sql=true

# Oracle
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:projectdb
#spring.datasource.username=system
#spring.datasource.password=Password123